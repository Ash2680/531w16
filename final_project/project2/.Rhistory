flag[p]=flag[p]+1
#while (ac[i,1]!= dmdata[p,1]) p=p+1
#if (ac[i,1]==dmdata[p,1]){
#  data[i,5:8]=dmdata[p,2:5]
#  data[i,9:10]=bmdata[p,]
#  if ((data[i,2]==1)||(data[i,2]==7)) data[i,11]=1
#}
}
tempdata=0
for(i in 1:p ){
rowdata=c(as.numeric(dmdata[i,2:5]),as.numeric(bmdata[i,]))
tempdata=c(tempdata,rep(rowdata,flag[i]))
}
tempmatrix=matrix(tempdata[2:length(tempdata)],nrow=nrow(ac),byrow=TRUE)
data[,5:10]=tempmatrix
valid <- (is.finite(data$Activity) & is.finite(data$age)
&is.finite(data$gnd) &is.finite(data$Bmi)
&(data$HouInc<12)&is.finite(data$HouInc)
&is.finite(data$Weight) &is.finite(data$HouNum))
data_valid = data[valid,]
data=data_valid
head(data)
age=array(NA,85)
for (i in 1:85 ){
if (length(which(data$age==i))>0)
age[i]=mean(data$Activity[which(data$age==i)])
}
plot(age)
?acf
stats:::plot.acf
?plot.acf
qgamma(c(0.025,0.097),237,20)
?qgamma
qgamma(c(0.025,0.097),125,14)
qnorm(0.005)
50*2.576*2.576
x <- read.table(file="http://ionides.github.io/531w16/intro/ann_arbor_weather.csv",header=TRUE)
plot(Low~Year,data=x,type="l")
head(x)
arima.sim
6/log(1/6)
?arima.sim
## ----opts,include=FALSE,cache=FALSE--------------------------------------
options(
keep.source=TRUE,
encoding="UTF-8"
)
## ----stationarity_sim, echo=FALSE----------------------------------------
N <- 500
times <- 1:N
T1 <- 120
T2 <- 37
set.seed(73413)
y <- sin(2*pi*(times/T1 + runif(1))) +   sin(2*pi*(times/T2 + runif(1))) + rnorm(N)
x <- y[1:50]
oldpars <- par(mfrow=c(1,2))
plot(x,ty="l",xlab="")
plot(y,ty="l",xlab="")
par(oldpars)
## ----sinusoidal,echo=FALSE-----------------------------------------------
np <- 500
U <- seq(from=0,to=1,length=np)
epsilon1 <- sin(2*pi*U)
epsilon2 <- sin(2*pi*2*U)
epsilon3 <- sin(2*pi*3*U)
matplot(U,cbind(epsilon1,epsilon2,epsilon3),col=c("black","red","blue"),lty=c(1,2,4),ylab="",ty="l",xlab="U")
abline(h=0,lty="dotted")
abline(v=c(1/4,1/2,3/4),lty="dotted")
## ----ar_arima_sim,fig.width=4--------------------------------------------
set.seed(123456789)
ar1 <- arima.sim(list(ar=0.6),n=100,sd=1)
plot(ar1,type="l")
## ----ar_sim,fig.width=4--------------------------------------------------
set.seed(123456789)
N <- 100
X <- numeric(N)
X[1] <- rnorm(1,sd=1.56)
for(n in 2:N) X[n] <- 0.6 * X[n-1] + rnorm(1)
plot(X,type="l")
x
ar1
X
head(X)
X[1:50]
ar1
## ----opts,include=FALSE,cache=FALSE--------------------------------------
options(
keep.source=TRUE,
encoding="UTF-8"
)
## ----root----------------------------------------------------------------
roots <- polyroot(c(1,2,2))
roots
## ----abs_roots-----------------------------------------------------------
abs(roots)
## ----reducibility--------------------------------------------------------
list(AR_roots=polyroot(c(1,-5/6,1/6)),MA_roots=polyroot(c(1,-1,1/4)))
## ----quasi_periodic------------------------------------------------------
omega <- 0.1
ar_coefs <- c(2/(1+omega^2), - 1/(1+omega^2))
set.seed(8395200)
X <- arima.sim(list(ar=ar_coefs),n=500,sd=1)
par(mfrow=c(1,2))
plot(X)
plot(ARMAacf(ar=ar_coefs,lag.max=500),type="l",ylab="ACF of X")
ARMAacf(ar=ar_coefs,lag.max=500)
1/e
e
exp
exp(1)
1/exp(1)
a=ARMAacf(ar=ar_coefs,lag.max=500)
a
a[which(a<1/exp(1))]
b=array(FALSE,500)
b
b[which(a<1/exp(1))]=TRUE
b
loess
?loess
a=rnorm(100)
a
plot(a)
plot(a,type="l")
par(mfrow=c(1,1))
plot(a,type="l")
plot(loess(a))
date=(1:100)
plot(loess(a~date))
plot(loess(a~date)$fitted)
plot(loess(a~date,span=0.5)$fitted)
plot(loess(a~date,span=0.1)$fitted)
plot(loess(a~date,span=0.1)$fitted,type="l")
a1=loess(a~date,span=0.1)$fitted
a5=loess(a~date,span=0.5)$fitted
plot(a1,type="l")
plot(a-a1,type="l")
?arima
arima
e=rnorm(100)
x=c(1:100)+e
acf(x)
y=c(1:100)
mod=lm(x~y)
acf(mod)
acf(mod$residuals)
e=rnorm(100)
x=c(1:100)+e
arima(x)
arima(x,order=c(1,0,1))
mod=arima(x,order=c(1,0,1))
sum(mod$residuals)
mean(mod$residuals)
modl=lm(x~c(1:100))
mean(modl$residuals)
qnorm(0.95,0,1)
qnorm(0.975,0,1)
n=c(1,4,16,64,100)
mu=seq(-50,50,length.out=10000)
n=c(1,4,16,64,100)
mu=seq(-50,50,length.out=10000)
beta1=matrix(0,nrow=5,ncol=10000)
beta2=beta1
for (i in 1:5){
for (j in 1:10000){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(beta1)
beta1
plot(beta1[1,],mu)
plot(mu,beta1[1,])
n=c(1,4,16,64,100)
mu=seq(-2,2,length.out=100)
beta1=matrix(0,nrow=5,ncol=10000)
beta2=beta1
for (i in 1:5){
for (j in 1:10000){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,])
n=c(1,4,16,64,100)
loop=100
mu=seq(-2,2,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,])
plot(mu,beta1[1,],type="l")
n=c(1,4,16,64,100)
loop=100
mu=seq(-3,3,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l")
max(beta1[1,])
n=c(1,4,16,64,100)
loop=100
mu=seq(-4,4,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l")
max(beta[1,])
max(beta1[1,])
n=c(1,4,16,64,100)
loop=1000
mu=seq(-8,8,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l")
n=c(1,4,16,64,100)
loop=1000
mu=seq(-6,6,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l")
line(mu,beta1[2,])
lines(mu,beta1[2,])
plot(mu,beta1[1,],type="l")
lines(mu,beta1[2,])
lines(mu,beta1[3,])
lines(mu,beta1[5,])
lines(mu,beta1[4,])
abline(h = 0.05,col="red")
abline(h = 0.05,col="red",lty="dashed")
plot(mu,beta1[1,],type="l")
lines(mu,beta1[2,])
lines(mu,beta1[3,])
lines(mu,beta1[4,])
lines(mu,beta1[5,])
abline(h = 0.05,col="red",lty="dashed")
plot(mu,beta1[1,],type="l")
lines(mu,beta1[2,],col=3)
lines(mu,beta1[3,],col=4)
lines(mu,beta1[4,],col=5)
lines(mu,beta1[5,],col=6)
abline(h = 0.05,col="red",lty="dashed")
plot(mu,beta1[1,],type="l",col=3)
lines(mu,beta1[2,],col=4)
lines(mu,beta1[3,],col=5)
lines(mu,beta1[4,],col=6)
lines(mu,beta1[5,],col=7)
abline(h = 0.05,col="red",lty="dashed")
plot(mu,beta1[1,],type="l",col=2)
lines(mu,beta1[2,],col=3)
lines(mu,beta1[3,],col=4)
lines(mu,beta1[4,],col=5)
lines(mu,beta1[5,],col=7)
abline(h = 0.05,col="orange",lty="dashed")
plot(mu,beta1[1,],type="l",col=2)
lines(mu,beta1[2,],col=3)
lines(mu,beta1[3,],col=4)
lines(mu,beta1[4,],col=5)
lines(mu,beta1[5,],col=7)
abline(h = 0.05,col=9,lty="dashed")
abline(h = 0.05,col=10,lty="dashed")
abline(h = 0.05,col=11,lty="dashed")
abline(h = 0.05,col=4.5,lty="dashed")
abline(h = 0.05,col=8,lty="dashed")
plot(mu,beta2[1,],type="l",col=2)
lines(mu,beta2[2,],col=3)
lines(mu,beta2[3,],col=4)
lines(mu,beta2[4,],col=5)
lines(mu,beta2[5,],col=7)
abline(h = 0.05,col=8,lty="dashed")
plot(mu,beta1[1,],type="l",col=2,lwd=1.5)
plot(mu,beta1[1,],type="l",col=2,lwd=1.5)
lines(mu,beta1[2,],col=3,lwd=1.5)
lines(mu,beta1[3,],col=4,lwd=1.5)
lines(mu,beta1[4,],col=5,lwd=1.5)
lines(mu,beta1[5,],col=7,lwd=1.5)
abline(h = 0.05,col=8,lty="dashed")
plot(mu,beta1[1,],type="l",col=2,lwd=2)
lines(mu,beta1[2,],col=3,lwd=2)
plot(mu,beta1[1,],type="l",col=2,lwd=2)
lines(mu,beta1[2,],col=3,lwd=2)
lines(mu,beta1[3,],col=4,lwd=2)
lines(mu,beta1[4,],col=5,lwd=2)
lines(mu,beta1[5,],col=7,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
plot(mu,beta1[1,],type="l",col=7,lwd=2)
lines(mu,beta1[2,],col=6,lwd=2)
lines(mu,beta1[3,],col=5,lwd=2)
lines(mu,beta1[4,],col=4,lwd=2)
lines(mu,beta1[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
7:3
legend(-6,0.9,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
n=c(1,4,16,64,100)
loop=1000
mu=seq(-5,5,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l",col=7,lwd=2)
lines(mu,beta1[2,],col=6,lwd=2)
lines(mu,beta1[3,],col=5,lwd=2)
lines(mu,beta1[4,],col=4,lwd=2)
lines(mu,beta1[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(-6,0.9,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta1[1,],type="l",col=7,lwd=2)
lines(mu,beta1[2,],col=6,lwd=2)
lines(mu,beta1[3,],col=5,lwd=2)
lines(mu,beta1[4,],col=4,lwd=2)
lines(mu,beta1[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(-5,0.9,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta1[1,],type="l",col=7,lwd=2,main="part (a)",xlab=expression(mu))
plot(mu,beta1[1,],type="l",col=7,lwd=2,main="part (a)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
n=c(1,4,16,64,100)
loop=1000
mu=seq(-5,5,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l",col=7,lwd=2,main="part (a)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta1[2,],col=6,lwd=2)
lines(mu,beta1[3,],col=5,lwd=2)
lines(mu,beta1[4,],col=4,lwd=2)
lines(mu,beta1[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(-5,0.9,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta2[1,],type="l",col=7,lwd=2,main="part (b)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta2[2,],col=6,lwd=2)
lines(mu,beta2[3,],col=5,lwd=2)
lines(mu,beta2[4,],col=4,lwd=2)
lines(mu,beta2[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(-5,0.9,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta2[1,],type="l",col=7,lwd=2,main="part (b)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta2[2,],col=6,lwd=2)
lines(mu,beta2[3,],col=5,lwd=2)
lines(mu,beta2[4,],col=4,lwd=2)
lines(mu,beta2[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(4,0.4,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta2[1,],type="l",col=7,lwd=2,main="part (b)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta2[2,],col=6,lwd=2)
lines(mu,beta2[3,],col=5,lwd=2)
lines(mu,beta2[4,],col=4,lwd=2)
lines(mu,beta2[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(3,0.4,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta2[1,],type="l",col=7,lwd=2,main="part (b)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta2[2,],col=6,lwd=2)
lines(mu,beta2[3,],col=5,lwd=2)
lines(mu,beta2[4,],col=4,lwd=2)
lines(mu,beta2[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(2,0.4,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
n=c(1,4,16,64,100)
loop=1000
mu=seq(-5,5,length.out=loop)
beta1=matrix(0,nrow=5,ncol=loop)
beta2=beta1
for (i in 1:5){
for (j in 1:loop){
beta1[i,j]=1-pnorm(1.645-mu[j]*sqrt(n[i]),0,1)
beta2[i,j]=pnorm(-1.96-mu[j]*sqrt(n[i]),0,1)+1-pnorm(1.96-mu[j]*sqrt(n[i]))
}
}
plot(mu,beta1[1,],type="l",col=7,lwd=2,main="part (a)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta1[2,],col=6,lwd=2)
lines(mu,beta1[3,],col=5,lwd=2)
lines(mu,beta1[4,],col=4,lwd=2)
lines(mu,beta1[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(-5,0.9,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
plot(mu,beta2[1,],type="l",col=7,lwd=2,main="part (b)",xlab=expression(mu),ylab=expression(paste(beta,"(",mu,")")))
lines(mu,beta2[2,],col=6,lwd=2)
lines(mu,beta2[3,],col=5,lwd=2)
lines(mu,beta2[4,],col=4,lwd=2)
lines(mu,beta2[5,],col=3,lwd=2)
abline(h = 0.05,col=8,lty="dashed")
legend(2,0.4,c("n=1","n=4","n=16","n=64","n=100"),col=c(7:3),lwd=c(2,2,2,2,2))
install.packages("ggmap")
arctan
?atan
(atan(3)-atan(1))/pi
pi
1-(atan(2)-atan(0))/pi
fx<- function (x){
ans=(1+x^2)/(1+(x-1)^2)
return(ans)
}
x=seq(-200,200,length.out=2000000)
f<- function (x){
ans=(1+x^2)/(1+(x-1)^2)
return(ans)
}
fx=f(x)
plot(fx)
x=seq(-200,200,length.out=20000)
fx=f(x)
plot(x,fx)
x=seq(-60,60,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
x=seq(-3,3,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
x=seq(-6,6,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
par(mfrow=c(2,1))
x=seq(-6,6,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
fx=f(x)
x=seq(-40,40,length.out=20000)
plot(x,fx,pch=46)
par(mfrow=c(1,2))
x=seq(-6,6,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
x=seq(-100,100,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
abline(h =2,lty="dashed")
par(mfrow=c(1,2))
x=seq(-6,6,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
abline(h =2,lty="dashed")
abline(v=1,lty='dashed')
abline(v=3,lty='dashed')
x=seq(-100,100,length.out=20000)
fx=f(x)
plot(x,fx,pch=46)
abline(h=1,lty='dashed')
f<- function (x){
ans=(1+x^2)/(1+(x-1)^2)
return(ans)
}
par(mfrow=c(1,2))
x=seq(-6,6,length.out=20000)
fx=f(x)
plot(x,fx,type='l')
abline(h =2,lty="dashed")
abline(v=1,lty='dashed')
abline(v=3,lty='dashed')
x=seq(-100,100,length.out=20000)
fx=f(x)
plot(x,fx,type='l')
abline(h=1,lty='dashed')
abline(h=1.5.lty='dashed',col='red')
abline(h=1.5,lty='dashed',col='red')
f<- function (x){
ans=(1+x^2)/(1+(x-1)^2)
return(ans)
}
par(mfrow=c(1,2))
x=seq(-6,6,length.out=20000)
fx=f(x)
plot(x,fx,type='l',ylab="ratio")
abline(h =2,lty="dashed")
abline(v=1,lty='dashed')
abline(v=3,lty='dashed')
x=seq(-100,100,length.out=20000)
fx=f(x)
plot(x,fx,type='l',ylab='ratio')
abline(h=1,lty='dashed')
abline(h=1.5,lty='dashed',col='red')
require(rmarkdown)
render("report_flux.md","html_document")
setwd("F:/umich/course/2016 winter/Stats 531/final/report/final report")
render("report_flux.md","html_document")
setwd("F:/umich/course/2016 winter/Stats 531/final/report/final report")
render("report_flux.md","html_document")
